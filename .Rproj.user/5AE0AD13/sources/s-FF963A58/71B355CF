{
    "collab_server" : "",
    "contents" : "# PENDIENTE:\n# MainInfo[4]=paste(\"Authors                          \",max(AutDoc$ida),\"\\n\")\n\n\n\n\n#' WoS DB Summaries\n#'\n#' \\code{summary} methods for \\code{wos.db}-class...\n#' @method summary wos.db\n#' @param object an object for which a summary is desired.\n#' @param filter vector of document identifiers (usually a result of \\code{\\link{get.idDocs}}).\n#' @param TC.index citation indexes.\n#' @param nmax number of top levels.\n#' @param ...\tfurther arguments passed to or from other methods.\n#' @seealso \\code{\\link{wos_CreateDB}}.\n#' @export\nsummary.wos.db <- function(object, filter, TC.index = c(\"H\", \"G\"), nmax = 10, ...) {\n  # object=db; filter=idocs; TC.index = c(\"H\", \"G\"); nmax = 10\n  # OJO: supone que Docs esta ordenado por idd\n  # OJO CON EL FILTRO...\n  # stopifnot(is.numeric(filter))\n  filtered <- !missing(filter)\n  docs <- if(filtered) object$Docs[filter, ] else object$Docs\n  # Tipo de documentos\n  doctypes <- as.matrix(table(droplevels(docs$DT)))\n  dimnames(doctypes)[[2]] <- \"Documents\"\n  # Citas\n  TC <- docs$TC\n  TC.index <- match.arg(TC.index, several.ok = TRUE)\n  index <- NULL\n  if(length(TC.index)) {\n    TC <- sort(TC, decreasing = TRUE)\n    index <- list()\n    if(!sum(TC)) {\n      if (\"H\" %in% TC.index) index$H <- 0\n      if (\"G\" %in% TC.index) index$G <- 0\n    } else {\n      pos <- seq_along(TC) # 1:length(TC)\n      if (\"H\" %in% TC.index) index$H <- max(which(TC >= pos))\n      if (\"G\" %in% TC.index) index$G <- max(which(pos^2 <= cumsum(TC)))\n    }\n    # oldClass(index) <- c(\"summaryDefault\", \"table\")\n\n  }\n  # Documentos por autor\n  ida <- with(object$AutDoc,\n              if(filtered) ida[idd %in% filter] else ida)\n  autdoc <- as.numeric(table(ida))\n  # SELECCIONAR LAS FILAS DE LAS TABLAS CON idd EN filter\n  ftable <- function(data, names, nmax) {\n    top.table <- as.matrix(.stable(data, nmax = nmax))\n    nres <- min(nmax, nrow(top.table))\n    dnames <- dimnames(top.table)[[1]][1:nres]\n    dnames <- names[as.numeric(dnames)]\n    dimnames(top.table)[[2]] <- \"Documents\"\n    dimnames(top.table)[[1]][1:nres] <- dnames\n    oldClass(top.table) <- c(\"table\")\n    return(top.table)\n  }\n  # Top 10 Categories\n  #top.cat <- ftable(object$CatDoc$idc, object$Categories$WC, nmax = nmax)\n  idc <- with(object$CatDoc,\n              if(filtered) idc[idd %in% filter] else idc)\n  top.cat <- ftable(idc, object$Categories$WC, nmax = nmax)\n  # Top 10 Areas\n  idra <- with(object$AreaDoc,\n               if(filtered) idra[idd %in% filter] else idra)\n  top.area <- ftable(idra, object$Areas$SC, nmax = nmax)\n  # Top 10 Journals\n  top.jour <- ftable(docs$idj, object$Journals$JI, nmax = nmax)\n  # Top 10 Countries\n  find.coun<- function(x){\n    aux <- object$AddAutDoc %>% dplyr::filter(idd == x)\n    return(unique(object$Addresses$Country[aux$ida]))\n  }\n  top.coun <- as.matrix(.stable(unlist(sapply(docs$idd,find.coun)), nmax = nmax))\n  dimnames(top.coun)[[2]] <- \"Documents\"\n  oldClass(top.coun) <- \"table\"\n  # Result\n  result <- list(ndocs = nrow(docs), naut = length(autdoc), yrange = range(docs$PY), nmax = nmax,\n                 # doctypes = with(docs, table(DT, PT)),\n                 doctypes = doctypes,\n                 summary.an = with(docs, summary(an)),\n                 summary.autdoc= summary(autdoc),\n                 summary.TC = summary(TC), TC.index = index,\n                 top = list(cat = top.cat, area = top.area, jour = top.jour, coun = top.coun)\n  )\n  oldClass(result) <- \"summary.wos.db\"\n  return(result)\n}\n\n#' @rdname summary.wos.db\n#' @method print summary.wos.db\n#' @param x\tan object used to select a method.\n#' @export\nprint.summary.wos.db <- function(x, ...)  {\n  cat('Number of documents:', x$ndocs,'\\n')\n  cat('Authors:', x$naut,'\\n')\n  if (diff(x$yrange))\n    cat('Period:', paste(x$yrange, collapse = ' - '),'\\n')\n  else\n    cat('Period:', x$yrange[1],'\\n')\n  cat('\\nDocument types:\\n')\n  print(x$doctypes)\n  cat('\\nNumber of authors per document:\\n')\n  print(x$summary.an)\n  cat('\\nNumber of documents per author:\\n')\n  print(x$summary.autdoc)\n  cat('\\nNumber of times cited:\\n')\n  print(x$summary.TC)\n  cat('\\nIndexes:\\n')\n  print.table(x$TC.index)\n  # print(c('values', unlist(x$TC.index)))\n  # with(object$Docs, print(as.data.frame(table(TC)), row.names = FALSE))\n  with(x$top,{\n    cat('\\nTop Categories:\\n')\n    print(cat)\n    cat('\\nTop Areas:\\n')\n    print(area)\n    cat('\\nTop Journals:\\n')\n    print(jour)\n    cat('\\nTop Countries:\\n')\n    print(coun)\n\n  })\n}\n\n#' @rdname summary.wos.db\n#' @param db Object of \\code{\\link{class}} \\code{wos.db}, as returned by \\code{\\link{wos_CreateDB}}.\n#' @param idAuthors optional; author identifiers\n#' @export\n# PENDIENTE: Hacer version simplificada de summary\nTC.authors <- function(db, idAuthors) {\n  faut <- function(x) summary(db, get.idDocs(db, idAuthors = x))$TC.index\n  t(sapply(idAuthors, faut))\n}\n\n\n#' @rdname summary.wos.db\n#' @method plot summary.wos.db\n#' @param which\t if a subset of the plots is required,\n#' specify a subset of the numbers \\code{1:5}.\n#' @param pie logical; if \\code{TRUE}, pie charts are drawn.\n#' @param others logical; if \\code{FALSE}, only \\code{nmax} top levels categories are shown.\n#' @param ask\tlogical; if \\code{TRUE}, the user is asked before each plot,\n#' see \\code{\\link{par}(ask=.)}.\n#' @export\nplot.summary.wos.db <- function(x, which = 1:5,\n                        pie = FALSE,\n                        others = !pie,\n                        # ask = prod(par(\"mfcol\")) < length(which) && dev.interactive(),\n                        ask = length(which) > 1 && dev.interactive(),\n                        ...) {\n  nmax <- x$nmax\n  ndf <- if(others) nmax + 1 else nmax\n  show <- rep(FALSE, 5)\n  show[which] <- TRUE\n  if (ask) {\n    oask <- devAskNewPage(TRUE)\n    on.exit(devAskNewPage(oask))\n  }\n  if(show[1]) {\n    doc <- x$doctypes\n    df.doc <- data.frame(Types = factor(rownames(doc)), Documents = doc, row.names = NULL)\n    pobj <- if (!pie)\n      ggplot(data = df.doc, aes(x = reorder(Types, Documents), y = Documents)) +\n      geom_bar(stat = \"identity\") + coord_flip() + labs(x = \"Types\")\n    else\n      ggplot(df.doc, aes(x = \"\", y = Documents, fill = Types)) +\n      geom_bar(width = 1, stat = \"identity\") + coord_polar(\"y\", start = 0)\n    print(pobj)\n  }\n  if(show[2]) {\n    df <- as.data.frame(x$top$cat)\n    df <- df[1:ndf, c(1,3)]\n    names(df) <- c(\"Categories\", \"Documents\")\n    pobj <- if (!pie)\n      ggplot(data = df, aes(x = Categories, y = Documents)) +\n      geom_bar(stat = \"identity\") + coord_flip() + labs(x = \"Categories\") +\n      scale_x_discrete(limits = rev(df$Categories)) + scale_y_log10()\n    else\n      ggplot(df, aes(x = \"\", y = Documents, fill = Categories)) +\n      geom_bar(width = 1, stat = \"identity\") + coord_polar(\"y\", start = 0)\n   print(pobj)\n  }\n  if(show[3]) {\n    df <- as.data.frame(x$top$area)\n    df <- df[1:ndf, c(1,3)]\n    names(df) <- c(\"Areas\", \"Documents\")\n    pobj <- if (!pie)\n      ggplot(data = df, aes(x = Areas, y = Documents)) +\n      geom_bar(stat = \"identity\") + coord_flip() + labs(x = \"Areas\") +\n      scale_x_discrete(limits = rev(df$Areas)) + scale_y_log10()\n    else\n      ggplot(df, aes(x = \"\", y = Documents, fill = Areas)) +\n      geom_bar(width = 1, stat = \"identity\") + coord_polar(\"y\", start = 0)\n    print(pobj)\n  }\n  if(show[4]) {\n    df <- as.data.frame(x$top$jour)\n    df <- df[1:ndf, c(1,3)]\n    names(df) <- c(\"Journals\", \"Documents\")\n    pobj <- if (!pie)\n      ggplot(data = df, aes(x = Journals, y = Documents)) +\n      geom_bar(stat = \"identity\") + coord_flip() + labs(x = \"Journals\") +\n      scale_x_discrete(limits = rev(df$Journals)) + scale_y_log10()\n    else\n      ggplot(df, aes(x = \"\", y = Documents, fill = Journals)) +\n      geom_bar(width = 1, stat = \"identity\") + coord_polar(\"y\", start = 0)\n    print(pobj)\n  }\n  if(show[5]) {\n    df <- as.data.frame(x$top$coun)\n    df <- df[1:ndf, c(1,3)]\n    names(df) <- c(\"Countries\", \"Documents\")\n    pobj <- if (!pie)\n      ggplot(data = df, aes(x = Countries, y = Documents)) +\n      geom_bar(stat = \"identity\") + coord_flip() + labs(x = \"Countries\") +\n      scale_x_discrete(limits = rev(df$Countries)) + scale_y_log10()\n    else\n      ggplot(df, aes(x = \"\", y = Documents, fill = Countries)) +\n      geom_bar(width = 1, stat = \"identity\") + coord_polar(\"y\", start = 0)\n    print(pobj)\n  }\n\n}\n",
    "created" : 1511512036894.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3958442550",
    "id" : "71B355CF",
    "lastKnownWriteTime" : 1513758710,
    "last_content_update" : 1513758710469,
    "path" : "C:/Users/Borja/Dropbox/_Rankings/rwos_package/rwos/R/summary.R",
    "project_path" : "R/summary.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}