{
    "collab_server" : "",
    "contents" : "#' Summary year\n#'\n#' \\code{summary_year} returns a summary per year...\n#' @param object an object for which a summary is desired.\n#' @param filter vector of document identifiers (usually a result of \\code{\\link{get.idDocs}}).\n#' @param ...\tfurther arguments passed to or from other methods.\n#' @seealso \\code{\\link{wos_CreateDB}}.\n#' @export\n# PENDIENTE: RESULTADOS COMO TABLAS\nsummary_year <- function(object, filter, ...) {\n  # object=db; filter=idocs\n  # stopifnot(is.numeric(filter))\n  docs <- if(!missing(filter)) object$Docs[filter, ] else object$Docs\n\n  # Years\n  Doc.PY <- as.matrix(table(docs$PY))\n  dimnames(Doc.PY)[[2]] <- \"Documents\"\n\n\n  # Authors per document per year\n\n  AuDoc.PY <- docs %>% group_by(PY)  %>% summarise(avg = mean(an), med = median(an))\n  names(AuDoc.PY) <- c(\"\", \"Avg\", \"Median\")\n\n  # # Documents per author per year\n  # ida <- object$AutDoc$ida # pendiente filtar AutDoc\n  # year <- docs$PY[object$AutDoc$idd]\n  # as.data.frame(table(ida, year))\n  #\n  # idd.filt <- object$AutDoc$idd[object$AutDoc$idd %in% docs$idd]\n  # ida.filt <- object$AutDoc$ida[object$AutDoc$idd %in% docs$idd]\n  # nDocAu.Year <- data.frame(ida=ida.filt,PY=docs$PY[match(idd.filt,docs$idd)])\n  # DocAu.PY <- data.frame(sort(unique(nDocAu.Year$PY)),round(colMeans(table(nDocAu.Year)),2),apply(table(nDocAu.Year),2,median))\n  # aux <- table(nDocAu.Year)\n  # nDocAu<- data.frame(Docs=as.vector(aux), PY=rep(colnames(aux), each = dim(aux)[1]))\n  # rownames(DocAu.PY)=NULL\n  # names(DocAu.PY) <- c(\"\", \"Avg\", \"Median\")\n  # Times cited\n  TC.PY <- docs %>% group_by(PY)  %>% summarise(n = sum(TC), avg = mean(TC), med = median(TC))\n  names(TC.PY) <- c(\"\", \"Cites\", \"Avg\", \"Median\")\n\n\n  result <- list(Doc.PY = Doc.PY,\n                 AuDoc.PY = as.data.frame(AuDoc.PY),\n                 # DocAu.PY = as.data.frame(DocAu.PY),\n                 TC.PY = as.data.frame(TC.PY),\n                 docs = docs[c(\"PY\", \"an\", \"TC\")]\n                 # , nDocAu = nDocAu\n            )\n  oldClass(result) <- \"summary.year\"\n  return(result)\n\n}\n\n\n#' @rdname summary_year\n#' @method print summary.year\n#' @param x\tan object used to select a method.\n#' @export\nprint.summary.year <- function(x, ...)  {\n  cat(\"\\nAnnual Scientific Production:\\n\\n\")\n  print(x$Doc.PY, row.names=FALSE)\n  cat(\"\\nAnnual Authors per Document:\\n\\n\")\n  print(x$AuDoc.PY, row.names=FALSE)\n  # cat(\"\\nAnnual Documents per Author\\n\\n\")\n  # print(x$DocAu.PY)\n  cat(\"\\nAnnual Times Cited:\\n\\n\")\n  print(x$TC.PY, row.names=FALSE)\n}\n\n#' @rdname summary_year\n#' @method plot summary.year\n#' @param which\t if a subset of the plots is required,\n#' specify a subset of the numbers \\code{1:3}.\n#' @param boxplot logical; if \\code{TRUE}, boxplots are drawn (for plots from 2 to 4).\n#' @param ask\tlogical; if \\code{TRUE}, the user is asked before each plot,\n#' see \\code{\\link{par}(ask=.)}.\n#' @export\nplot.summary.year <- function(x, which = 1:3, boxplot = FALSE,\n                              # ask = prod(par(\"mfcol\")) < length(which) && dev.interactive(),\n                              ask = length(which) > 1 && dev.interactive(), ...) {\n  show <- rep(FALSE, 3)\n  show[which] <- TRUE\n  if (ask) {\n    oask <- devAskNewPage(TRUE)\n    on.exit(devAskNewPage(oask))\n  }\n  if(show[1] & !boxplot) {\n    Doc.PY <- data.frame(Types = factor(rownames(x$Doc.PY)), Documents = x$Doc.PY, row.names = NULL)\n    names(Doc.PY) <- c(\"Years\",\"Documents\")\n    pobj <- ggplot(data=Doc.PY, aes(x=Years, y=Documents, group=1)) +\n      geom_line(color=\"blue\")+\n      geom_point(color=\"blue\") + ggtitle(\"Scientific Production\")\n    print(pobj)\n  }\n  if(show[2]) {\n    names(x$AuDoc.PY) <- c(\"Years\",\"Average\",\"Median\")\n    pobj <- if (!boxplot)\n      ggplot(data=x$AuDoc.PY, aes(x=factor(Years), y=Average, group=1)) +\n      geom_line(color=\"blue\")+\n      geom_point(color=\"blue\") + ggtitle(\"Authors per Document\") +\n      xlab(\"Years\")\n    else\n    ggplot(x$docs, aes(x = factor(x$docs$PY), y = x$docs$an)) +\n      geom_boxplot(fill = \"#4271AE\", colour = \"#1F3552\") +\n      xlab(\"Years\") + ylab(\"Authors per document\")+ scale_y_log10()\n    print(pobj)\n  }\n  if(show[3]) {\n  #   names(x$DocAu.PY) <- c(\"Years\",\"Average\",\"Median\")\n  #   pobj <- if (!boxplot)\n  #     ggplot(data=x$DocAu.PY, aes(x=Years, y=Average, group=1)) +\n  #     geom_line(color=\"blue\")+\n  #     geom_point(color=\"blue\") + ggtitle(\"Documents per Author\")\n  #   else\n  #   ggplot(x$nDocAu, aes(x = factor(x$nDocAu$PY), y = x$nDocAu$Docs)) +\n  #     geom_boxplot(fill = \"#4271AE\", colour = \"#1F3552\") +\n  #     xlab(\"Years\") + ylab(\"Documents per Author\")\n  #   print(pobj)\n  # }\n  # if(show[4]) {\n    names(x$TC.PY) <- c(\"Years\",\"Average\",\"Median\")\n    pobj <- if (!boxplot)\n      ggplot(data=x$TC.PY, aes(x=factor(Years), y=Average, group=1)) +\n      geom_line(color=\"blue\")+\n      geom_point(color=\"blue\") + ggtitle(\"Times Cited\") +\n      xlab(\"Years\")\n    else\n    ggplot(x$docs, aes(x = factor(x$docs$PY), y = x$docs$TC)) +\n      geom_boxplot(fill = \"#4271AE\", colour = \"#1F3552\") +\n      xlab(\"Years\") + ylab(\"Times Cited\") + scale_y_log10()\n    print(pobj)\n  }\n\n}\n\n\n",
    "created" : 1511861688342.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1597684431",
    "id" : "C6EEE675",
    "lastKnownWriteTime" : 1513758838,
    "last_content_update" : 1513758838575,
    "path" : "C:/Users/Borja/Dropbox/_Rankings/rwos_package/rwos/R/summary.year.R",
    "project_path" : "R/summary.year.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}