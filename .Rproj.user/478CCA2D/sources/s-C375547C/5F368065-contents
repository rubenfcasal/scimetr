#' ---
#' title: "Package rwos: Analysis of Web of Science (WoS) Data with R"
#' author: UDC Ranking's Group
#' date: '`r paste("rwos", packageVersion("rwos"),":", Sys.Date())`'
#'
#' output:
#'   html_document:
#'      toc: true
#'      toc_float: true
#' ---
#' Este es un informe creado con R-Markdown (ver p.e. <http://rmarkdown.rstudio.com>)
#' y el paquete *rwos*.

#+ spin, include=FALSE, eval= FALSE
# Una forma rápida de crear este tipo de informes es emplear la funcion *spin*
# del paquete *knitr* (ver p.e. <http://yihui.name/knitr/demo/stitch>).
# Este informe fue creado con el siguiente comando:
# library(rmarkdown)
# browseURL(url = render(knitr::spin('rwos_package.R', knit = FALSE)))

#+ setup, include=FALSE
knitr::opts_chunk$set(comment=NA, prompt=TRUE, cache = FALSE)
# , out.width=800, dev='svg', fig.height=4, fig.width=6, warning = FALSE)

#'
#' Instalación
#' -----------
#' Para instalar el paquete sería recomendable en primer lugar instalar las dependencias:
#+ dependencies, eval=FALSE
install.packages(c('dplyr', 'lazyeval', 'stringr', 'ggplot2', 'openxlsx', 'tidyr'))

#' En windows bastaría con instalar la última versión del paquete en forma binaria *rwos_0.1.X.zip*.

library(rwos)

#'
#' ## Cargar datos
#'
#' ### Datos de ejemplo
#' En el paquete se incluye un conjunto de datos de ejemplo correspondiente a la búsqueda
#' por el campo Organización-Nombre preferido de la UDC (Organization-Enhaced: OG = Universidade da Coruna)
#' correspondientes al año 2015.
#'
#' Variables WoS:
as.data.frame(attr(wosdf, "variable.labels"))

#' Se podría crear la base de datos con los siguientes comandos
#+ wosdf, eval=FALSE
db <- wos_CreateDB(wosdf)
# summary(db)

#' ### Cargar datos de directorio
#' Se pueden cargar automáticamente los archivos wos
#' (tienen una limitación de 500 registros) de un subdirectorio:
dir('./txt', pattern='*.txt')
#' Se combinan los ficheros y se crea la base de datos con los siguientes comandos:
#+ wostxt, cache=TRUE
wos.txt <- wos_ImportSources('txt', other = FALSE)
db <- wos_CreateDB(wos.txt)
# save(db, file = "txt.RData")
# load("txt.RData")

#' ## Sumarios

#' ### Sumario "wos.db"
#+ summary, cache=TRUE
res1 <- summary(db)
res1


#' ### Sumario por años
#' Obtener sumario por años:
res2 <- summary_year(db)
res2

#' ## Gráficos
#' Emplea la librería *ggplot2*.
#'
#' ### "wos.db"
#+ plotdb, warning=FALSE, message=FALSE

plot(db)

#' ### Sumario "wos.db"

plot(res1)

plot(res1, pie = TRUE)


#' ### Sumario por años

plot(res2)

plot(res2, boxplot = TRUE)



#' ## Filtrado

#' ### Funciones get

#' Buscar una persona concreta

idAuthors <- get.idAuthors(db,AF == "Angel Bartolome, Miguel")
idAuthors

#' Buscar en nombres personas

idAuthors <- get.idAuthors(db, grepl('Miguel A.', AF))
str(idAuthors)
idAuthors[1:10]

#' get.idAreas
#' Devuelve códigos de las áreas
#' Multiple conditions are combined with & (see \code{\link[dplyr]{filter}})
#' Se puede emplear cualquier variable de la correspondiente tabla...
get.idAreas(db,SC=='Mathematics')
get.idAreas(db,SC=='Mathematics'| SC=='Dermatology')

#'  get.idCategories
get.idCategories(db, grepl('Mathematics', WC))

#'  get.idJournals
get.idJournals(db,SO=='JOURNAL OF THE AMERICAN CHEMICAL SOCIETY')
get.idJournals(db,J9=='J AM CHEM SOC')


#' ### Obtener documentos de autores
#' Los indices anteriores se pueden combinar en `get.idDocs`

idocs <- get.idDocs(db, idAuthors = idAuthors)
idocs
#' Los índices de documentos se pueden utilizar como filtro p.e. en `summary`.
#'
#' ### Sumarios filtrados
#' Obtener sumario de autores:
summary(db, idocs)

#' Obtener sumario de autores por años:
summary_year(db, idocs)

#' ## Indices autores
#' Obtener índices de múltiples autores
TC.authors(db, idAuthors)


